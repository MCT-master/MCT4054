#N canvas 399 125 1724 1298 12;
#X obj 2144 500 neuralnet;
#X floatatom 2204 527 10 0 0 1 loss - - 0;
#X floatatom 2192 564 10 0 0 1 accuracy - - 0;
#X floatatom 2169 598 8 0 0 1 epoch - - 0;
#X msg 1019 828 destroy;
#X text 46 395 3) set the loss function;
#X msg 47 543 set_optimizer adam;
#X text 46 521 4) set the optimizer;
#X msg 1014 391 validate;
#X msg 1018 276 train 10;
#X text 48 644 5) set the number of epochs;
#X text 47 109 1) create a network the can predict 4 classes;
#X obj 47 154 s class_example;
#X msg 47 281 set_activation_function 0 sigmoid \, set_activation_function 1 softmax;
#X msg 47 418 set_loss_function cat_x_entropy;
#X text 45 236 2) set activation functions if different that default \, softmax is needed at the output of a classifier;
#X msg 47 131 create 3 15 4 \, classification;
#X obj 47 317 s class_example;
#X obj 47 441 s class_example;
#X obj 47 566 s class_example;
#X obj 47 693 s class_example;
#X obj 1018 299 s class_example;
#X obj 1019 851 s class_example;
#X obj 1014 421 s class_example;
#X obj 2144 476 r class_example;
#X obj 578 141 netreceive -u 8001;
#X obj 578 175 unpack f f f;
#X floatatom 578 217 8 0 0 0 - - - 0;
#X floatatom 652 216 8 0 0 0 - - - 0;
#X floatatom 724 217 8 0 0 0 - - - 0;
#X obj 574 326 list;
#X msg 640 253 1;
#X obj 640 296 t b i;
#X obj 575 355 list append;
#X msg 678 252 2;
#X msg 722 252 3;
#X obj 576 382 list prepend add;
#X obj 576 406 list trim;
#X obj 576 435 s class_example;
#X obj 1883 583 route float list;
#X obj 1966 634 print confidences;
#X obj 2156 642 unpack f f, f 12;
#X floatatom 2156 665 5 0 0 1 class - - 0;
#X floatatom 2241 664 8 0 0 1 confidence - - 0;
#X text 2237 640 <- not confident output;
#X obj 1020 587 list trim;
#X obj 1020 563 list prepend predict;
#X obj 1020 620 s class_example;
#X obj 1333 804 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 1333 832 confidences \$1;
#X obj 1517 855 s class_example;
#X obj 1333 855 s class_example;
#X obj 525 696 random 1000;
#X obj 525 720 / 1000;
#X obj 595 519 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X msg 595 597 1;
#X obj 714 633 select 99;
#X obj 711 595 + 1;
#X obj 709 562 int;
#X msg 668 598 0;
#X msg 631 598 -1;
#X obj 626 694 random 1000;
#X obj 626 718 / 1000;
#X obj 733 695 random 1000;
#X obj 733 719 / 1000;
#X obj 599 763 pack f f f 0;
#X obj 600 799 list prepend add;
#X obj 600 823 list trim;
#X obj 600 856 s class_example;
#X obj 1020 531 spigot;
#X text 573 105 6) Produce training data;
#X obj 1777 323 osc~;
#X obj 1765 216 mtof;
#X obj 1791 354 *~;
#X obj 1788 434 dac~ 1 2;
#X obj 1784 122 select 0 1 2 3;
#X obj 1861 322 vline~;
#X msg 1700 176 60;
#X msg 1747 177 62;
#X msg 1796 179 64;
#X obj 1791 385 *~ 0.5;
#X obj 1771 286 vline~;
#X msg 1865 273 0 200;
#X floatatom 1883 622 5 0 0 0 prediction - - 0;
#X obj 1059 501 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X text 766 249 6a) add examples associated with a class, f 16;
#X msg 842 697 0;
#X msg 47 669 set_epochs 1000;
#X msg 1018 150 shuffle_train_set;
#X msg 1172 827 abort_training;
#X text 649 489 6b) add 100 random samples associated with class 0, f 17;
#X obj 1172 854 s class_example;
#X obj 1018 181 s class_example;
#X text 1016 103 7) Shuffle the training data set (used for better fitting of the network), f 41;
#X obj 595 632 metro 50;
#X obj 1939 672 unpack f f f f;
#X obj 1933 718 vsl 19 162 0 1 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 1960 719 vsl 19 162 0 1 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 1991 720 vsl 19 162 0 1 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 2023 721 vsl 19 162 0 1 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X text 1016 242 8) train the model with 10% of the samples kept for validating;
#X text 1012 356 9) validate the model (check the number of atoms connected to its outlets);
#X text 1017 803 destroy when done;
#X text 1011 474 10) use the trainel model to predict new/live examples;
#X text 1585 71 simple sound synthesizer with discrete pitch control, f 22;
#X text 2051 718 visualizing confidence for each class (range 0-1), f 24;
#X text 2015 476 neural network;
#X text 1169 804 abort training;
#X text 1013 657 12) save and load the trained model (use full path);
#X obj 1017 723 s class_example;
#X msg 1017 693 save /Users/stefanof/Desktop/MCT4054_W8-3/my_class_model.ann;
#X text 1011 768 13) other (check neuralnet help for more);
#X text 1355 779 predict list of class confidence instead of label, f 20;
#X text 1519 723 set a confidence threshold \, below which [neuralnet] will output a list of the class with the highest confidence and its confidence out the second outlet, f 27;
#X obj 1823 670 s prediction;
#X obj 1785 79 r prediction;
#X text 51 12 This example adapted from the collection of [neuralnet] examples from Alexandros Drymonitisis, f 37;
#X msg 1925 274 1 20;
#X msg 1777 250 \$1 20;
#X msg 1517 832 confidence_thresh 0.5;
#X connect 0 0 39 0;
#X connect 0 1 41 0;
#X connect 0 2 3 0;
#X connect 0 4 2 0;
#X connect 0 5 1 0;
#X connect 4 0 22 0;
#X connect 6 0 19 0;
#X connect 8 0 23 0;
#X connect 9 0 21 0;
#X connect 13 0 17 0;
#X connect 14 0 18 0;
#X connect 16 0 12 0;
#X connect 24 0 0 0;
#X connect 25 0 26 0;
#X connect 25 0 30 1;
#X connect 25 0 69 0;
#X connect 26 0 27 0;
#X connect 26 1 28 0;
#X connect 26 2 29 0;
#X connect 30 0 33 0;
#X connect 31 0 32 0;
#X connect 32 0 30 0;
#X connect 32 1 33 1;
#X connect 33 0 36 0;
#X connect 34 0 32 0;
#X connect 35 0 32 0;
#X connect 36 0 37 0;
#X connect 37 0 38 0;
#X connect 39 0 83 0;
#X connect 39 1 40 0;
#X connect 39 1 95 0;
#X connect 41 0 42 0;
#X connect 41 1 43 0;
#X connect 45 0 47 0;
#X connect 46 0 45 0;
#X connect 48 0 49 0;
#X connect 49 0 51 0;
#X connect 52 0 53 0;
#X connect 53 0 65 0;
#X connect 54 0 55 0;
#X connect 54 0 60 0;
#X connect 54 0 86 0;
#X connect 55 0 94 0;
#X connect 56 0 59 0;
#X connect 57 0 58 1;
#X connect 57 0 56 0;
#X connect 58 0 57 0;
#X connect 59 0 94 0;
#X connect 60 0 58 1;
#X connect 61 0 62 0;
#X connect 62 0 65 1;
#X connect 63 0 64 0;
#X connect 64 0 65 2;
#X connect 65 0 66 0;
#X connect 66 0 67 0;
#X connect 67 0 68 0;
#X connect 69 0 46 0;
#X connect 71 0 73 0;
#X connect 72 0 118 0;
#X connect 73 0 80 0;
#X connect 75 0 82 0;
#X connect 75 1 117 0;
#X connect 75 1 77 0;
#X connect 75 2 117 0;
#X connect 75 2 78 0;
#X connect 75 3 117 0;
#X connect 75 3 79 0;
#X connect 76 0 73 1;
#X connect 77 0 72 0;
#X connect 78 0 72 0;
#X connect 79 0 72 0;
#X connect 80 0 74 1;
#X connect 80 0 74 0;
#X connect 81 0 71 0;
#X connect 82 0 76 0;
#X connect 83 0 114 0;
#X connect 84 0 69 1;
#X connect 86 0 65 3;
#X connect 87 0 20 0;
#X connect 88 0 92 0;
#X connect 89 0 91 0;
#X connect 94 0 58 0;
#X connect 94 0 52 0;
#X connect 94 0 61 0;
#X connect 94 0 63 0;
#X connect 95 0 96 0;
#X connect 95 1 97 0;
#X connect 95 2 98 0;
#X connect 95 3 99 0;
#X connect 110 0 109 0;
#X connect 115 0 75 0;
#X connect 117 0 76 0;
#X connect 118 0 81 0;
#X connect 119 0 50 0;
