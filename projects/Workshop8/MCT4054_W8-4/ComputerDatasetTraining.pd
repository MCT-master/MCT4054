#N canvas 828 25 2181 1321 10;
#X floatatom 1003 835 10 0 0 1 loss - - 0;
#X floatatom 980 858 10 0 0 1 accuracy - - 0;
#X floatatom 936 881 8 0 0 1 epoch - - 0;
#X msg 39 830 poll;
#X msg 81 830 nopoll;
#X msg 892 606 destroy;
#X obj 466 948 *~, f 7;
#X obj 466 971 dac~;
#X obj 508 882 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 505 902 pack f 20;
#X obj 505 925 line~;
#X floatatom 66 1041 8 0 0 1 x - - 0;
#X floatatom 158 1040 8 0 0 1 y - - 0;
#X msg 467 320 shuffle_train_set;
#X msg 466 428 train 10;
#X msg 40 285 set_activation_function 0 sigmoid \, set_activation_function 1 sigmoid \, set_activation_function 2 linear;
#X msg 40 366 set_loss_function mse;
#X msg 40 435 set_optimizer adam;
#X obj 892 155 spigot;
#X obj 925 134 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X listbox 892 429 20 0 0 1 model_name - - 0;
#X msg 892 504 morph models/\$1.ann \$2;
#X obj 892 480 pack s f;
#X floatatom 937 456 5 0 0 1 ramp_time - - 0;
#X msg 892 728 abort_training;
#X msg 466 736 validate;
#X floatatom 39 727 5 0 0 0 - - - 0;
#X msg 39 749 desired_accuracy \$1;
#X msg 612 634 release_mem;
#X msg 611 228 store;
#X msg 611 250 show;
#X msg 644 250 clear;
#X msg 683 250 hide;
#X obj 613 183 bng 15 250 50 0 empty empty set_params_randomly 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 467 299 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#N canvas 503 522 647 699 create_training_set 0;
#X obj 30 193 metro 10;
#X obj 30 217 t b b;
#X obj 30 459 spigot 1;
#X obj 75 436 r \$0-spigots;
#X obj 30 508 list append;
#X obj 30 556 list trim;
#X obj 30 533 list prepend add;
#X obj 30 11 inlet;
#X obj 107 509 print training_data;
#X obj 30 85 t f f;
#X obj 93 334 spigot 1;
#X obj 30 61 t f b;
#X msg 138 282 1;
#X text 154 336 don't let one random target too many through;
#X msg 30 35 1;
#X obj 288 21 inlet;
#X obj 288 44 route bang store;
#X obj 334 91 s \$0-store;
#X obj 47 163 r \$0-close_metro;
#N canvas 106 415 441 397 done 0;
#X obj 20 20 inlet;
#X obj 20 313 outlet;
#X obj 47 82 t b b;
#X msg 47 240 0;
#X obj 47 181 t b b;
#X obj 47 263 s \$0-spigots;
#X obj 20 60 t b b;
#X msg 20 289 0;
#X msg 74 105 0;
#X obj 74 128 s \$0-close_metro;
#X msg 74 210 normalize_output 350 350 1000 350 1000;
#X text 89 180 also \, normalize the values of the synth parameters;
#X obj 74 240 s acc_input_example;
#X connect 0 0 6 0;
#X connect 2 0 4 0;
#X connect 2 1 8 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 4 1 10 0;
#X connect 6 0 7 0;
#X connect 6 1 2 0;
#X connect 7 0 1 0;
#X connect 8 0 9 0;
#X connect 10 0 12 0;
#X restore 168 293 pd done;
#N canvas 513 790 360 272 get_params 0;
#X obj 20 20 inlet;
#X obj 20 182 outlet;
#X obj 35 60 r \$0-reset;
#X obj 20 106 f;
#X obj 20 129 t f f;
#X obj 47 106 + 1;
#X msg 35 83 0;
#X obj 20 152 text get \$0-params;
#X text 78 108 get the stored parameters one by one;
#X connect 0 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 7 0;
#X connect 4 1 5 0;
#X connect 5 0 3 1;
#X connect 6 0 3 1;
#X connect 7 0 1 0;
#X restore 93 410 pd get_params;
#N canvas 792 594 762 370 randomize_coords 0;
#X obj 20 20 inlet;
#X obj 20 297 outlet;
#X obj 20 249 +;
#X obj 90 249 +;
#X obj 107 204 unpack f f f;
#X obj 20 272 pack f f f, f 24;
#X obj 20 60 t b b b, f 24;
#X obj 161 249 +;
#X text 183 57 provide small variations on the accelerometer values;
#X obj 20 145 clip 0 1;
#X obj 90 145 clip 0 1;
#X obj 161 145 clip 0 1;
#N canvas 498 535 360 272 get_accel_vals 0;
#X obj 20 20 inlet;
#X obj 20 182 outlet;
#X obj 35 60 r \$0-reset;
#X obj 20 106 f;
#X obj 20 129 t f f;
#X obj 47 106 + 1;
#X msg 35 83 0;
#X text 78 108 get the stored parameters one by one;
#X obj 20 152 text get \$0-acc_vals;
#X connect 0 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 8 0;
#X connect 4 1 5 0;
#X connect 5 0 3 1;
#X connect 6 0 3 1;
#X connect 8 0 1 0;
#X restore 107 181 pd get_accel_vals;
#X obj 107 20 inlet;
#X obj 20 121 / 100000;
#X obj 90 121 / 100000;
#X obj 161 121 / 100000;
#X obj 20 98 random 500;
#X obj 90 98 random 500;
#X obj 161 98 random 500;
#X connect 0 0 6 0;
#X connect 2 0 5 0;
#X connect 3 0 5 1;
#X connect 4 0 2 1;
#X connect 4 1 3 1;
#X connect 4 2 7 1;
#X connect 5 0 1 0;
#X connect 6 0 17 0;
#X connect 6 1 18 0;
#X connect 6 2 19 0;
#X connect 7 0 5 2;
#X connect 9 0 2 0;
#X connect 10 0 3 0;
#X connect 11 0 7 0;
#X connect 12 0 4 0;
#X connect 13 0 12 0;
#X connect 14 0 9 0;
#X connect 15 0 10 0;
#X connect 16 0 11 0;
#X connect 17 0 14 0;
#X connect 18 0 15 0;
#X connect 19 0 16 0;
#X restore 30 484 pd randomize_coords;
#N canvas 584 237 200 214 reset 0;
#X obj 20 20 inlet;
#X msg 97 101 1;
#X obj 20 124 s \$0-reset;
#X obj 97 124 s \$0-spigots;
#X obj 20 60 sel 1;
#X obj 20 83 t b b;
#X connect 0 0 4 0;
#X connect 1 0 3 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 5 1 1 0;
#X restore 57 112 pd reset;
#N canvas 442 227 411 572 set_params 0;
#X obj 43 30 inlet;
#X obj 43 397 + 50;
#X obj 70 326 + 50;
#X obj 43 420 s carrier;
#X obj 98 234 random 700;
#X obj 98 257 + 300;
#X obj 43 374 random 300;
#X obj 70 303 random 300;
#X obj 43 56 t b b b b b, f 19;
#X obj 70 349 s mod1;
#X obj 98 280 s index1;
#X obj 126 186 + 50;
#X obj 154 94 random 700;
#X obj 154 117 + 300;
#X obj 126 163 random 300;
#X obj 126 209 s mod2;
#X obj 154 140 s index2;
#X connect 0 0 8 0;
#X connect 1 0 3 0;
#X connect 2 0 9 0;
#X connect 4 0 5 0;
#X connect 5 0 10 0;
#X connect 6 0 1 0;
#X connect 7 0 2 0;
#X connect 8 0 6 0;
#X connect 8 1 7 0;
#X connect 8 2 4 0;
#X connect 8 3 14 0;
#X connect 8 4 12 0;
#X connect 11 0 15 0;
#X connect 12 0 13 0;
#X connect 13 0 16 0;
#X connect 14 0 11 0;
#X restore 288 175 pd set_params;
#X obj 288 91 t b b;
#X msg 315 115 1;
#X obj 315 138 s \$0-spigots;
#X obj 168 316 t f b;
#X obj 449 334 outlet;
#N canvas 958 533 548 272 counter 0;
#X obj 20 20 inlet;
#X obj 20 212 outlet;
#X obj 35 60 r \$0-reset;
#X obj 20 106 f;
#X obj 20 129 t f f;
#X obj 47 106 + 1;
#X msg 35 83 0;
#X obj 20 152 sel 1e+20;
#X obj 119 60 r \$0-num_params;
#X text 83 151 initial large number that is replaced by the number of synth parameters and positions stored;
#X connect 0 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 7 0;
#X connect 4 1 5 0;
#X connect 5 0 3 1;
#X connect 6 0 3 1;
#X connect 7 0 1 0;
#X connect 8 0 7 1;
#X restore 168 270 pd counter;
#X obj 93 372 t b b;
#N canvas 898 380 822 425 store_params_and_accel_vals 0;
#X obj 20 20 inlet;
#X obj 234 130 r carrier;
#X obj 248 325 loadbang;
#X msg 248 348 1e+15;
#X obj 213 296 spigot 1;
#X obj 258 272 r \$0-spigots;
#X msg 61 132 clear;
#X msg 20 157 click;
#X msg 102 109 close;
#X obj 213 272 list;
#X obj 213 77 r \$0-store;
#X obj 20 81 route show clear hide;
#X obj 20 203 text define \$0-params;
#X obj 213 376 text set \$0-params;
#X obj 520 118 f;
#X obj 520 141 t f f;
#X obj 547 118 + 1;
#X obj 535 70 r \$0-reset;
#X msg 535 93 0;
#X obj 520 164 s \$0-num_params;
#X obj 456 243 r accel_vals;
#X obj 474 325 loadbang;
#X msg 474 348 1e+15;
#X obj 435 296 spigot 1;
#X obj 480 272 r \$0-spigots;
#X obj 435 272 list;
#X obj 213 100 t b b b;
#X obj 569 376 text define \$0-acc_vals;
#X obj 435 376 text set \$0-acc_vals;
#X obj 254 151 r mod1;
#X obj 274 172 r index1;
#X obj 234 243 pack f f f f f;
#X obj 294 194 r mod2;
#X obj 315 215 r index2;
#X connect 0 0 11 0;
#X connect 1 0 31 0;
#X connect 2 0 3 0;
#X connect 3 0 13 1;
#X connect 4 0 13 0;
#X connect 5 0 4 1;
#X connect 6 0 12 0;
#X connect 6 0 27 0;
#X connect 7 0 12 0;
#X connect 8 0 12 0;
#X connect 9 0 4 0;
#X connect 10 0 26 0;
#X connect 11 0 7 0;
#X connect 11 1 6 0;
#X connect 11 2 8 0;
#X connect 14 0 15 0;
#X connect 15 0 19 0;
#X connect 15 1 16 0;
#X connect 16 0 14 1;
#X connect 17 0 18 0;
#X connect 18 0 14 1;
#X connect 20 0 25 1;
#X connect 21 0 22 0;
#X connect 22 0 28 1;
#X connect 23 0 28 0;
#X connect 24 0 23 1;
#X connect 25 0 23 0;
#X connect 26 0 9 0;
#X connect 26 1 25 0;
#X connect 26 2 14 0;
#X connect 29 0 31 1;
#X connect 30 0 31 2;
#X connect 31 0 9 1;
#X connect 32 0 31 3;
#X connect 33 0 31 4;
#X restore 381 67 pd store_params_and_accel_vals;
#X obj 30 579 s reg_example;
#N canvas 498 293 200 268 counter 0;
#X obj 20 20 inlet;
#X obj 20 238 outlet;
#X obj 69 238 outlet;
#X obj 35 60 r \$0-reset;
#X obj 20 106 f;
#X obj 20 129 t f f;
#X obj 47 106 + 1;
#X msg 35 83 0;
#X obj 42 178 t b b;
#X obj 20 154 sel 0 99;
#X connect 0 0 4 0;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 5 0 9 0;
#X connect 5 1 6 0;
#X connect 6 0 4 1;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 8 1 2 0;
#X connect 9 0 1 0;
#X connect 9 1 8 0;
#X restore 93 235 pd counter 99;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 33 0;
#X connect 2 0 21 0;
#X connect 3 0 2 1;
#X connect 4 0 6 0;
#X connect 4 0 8 0;
#X connect 5 0 32 0;
#X connect 6 0 5 0;
#X connect 7 0 14 0;
#X connect 9 0 0 0;
#X connect 9 1 22 0;
#X connect 10 0 30 0;
#X connect 11 0 9 0;
#X connect 11 1 12 0;
#X connect 12 0 10 1;
#X connect 14 0 11 0;
#X connect 15 0 16 0;
#X connect 16 0 24 0;
#X connect 16 1 17 0;
#X connect 16 2 31 0;
#X connect 18 0 0 0;
#X connect 19 0 27 0;
#X connect 20 0 4 1;
#X connect 21 0 4 0;
#X connect 24 0 23 0;
#X connect 24 1 25 0;
#X connect 25 0 26 0;
#X connect 27 0 10 1;
#X connect 27 1 28 0;
#X connect 29 0 19 0;
#X connect 30 0 20 0;
#X connect 30 1 21 1;
#X connect 33 0 10 0;
#X connect 33 1 29 0;
#X restore 467 275 pd create_training_set;
#X text 490 298 bangs when the training dataset is done;
#X text 891 674 in case you see the accuracy and loss value being stuck to only slight variations \, you can abort the training before it is over;
#X msg 466 634 retrain;
#X text 579 318 shuffles training dataset for better fitting;
#N canvas 271 165 642 448 some_notes 0;
#X floatatom 44 245 5 0 0 0 - - - 0;
#X msg 44 267 set_accuracy_denominator \$1;
#X text 43 33 One of the most important details with neural networks is the training dataset. A dataset can make a network learn well \, or make it overfit and not perform properly. In this example I have created 100 iterations for each group of values \, where each iteration has a small variation in the accelerometer values (open [pd create_training_set] to see how this is done). It took quite some iterations before I ended up in this setting.;
#X text 43 146 You are free to experiment with different datasets to see if you can get better results. If you're fine with the results \, but the accuracy is still not satisfactory \, you can reduce the accuracy denominator (default is 250) with the message below \, which will make [neuralnet] more tolerant and will output a higher accuracy.;
#X obj 44 290 s reg_example;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X restore 892 978 pd some_notes;
#X floatatom 251 1040 8 0 0 1 z - - 0;
#X obj 892 940 s carrier;
#X obj 892 917 unpack f f f f f, f 47;
#X obj 961 940 s mod1;
#X obj 1031 940 s index1;
#X obj 1101 940 s mod2;
#X obj 1171 940 s index2;
#N canvas 813 59 779 564 synth 0;
#X floatatom 43 77 8 0 0 2 carrier - - 0;
#X obj 43 273 +~;
#X obj 43 296 osc~;
#X floatatom 122 77 8 0 0 2 mod1 - - 0;
#X obj 122 233 osc~;
#X obj 122 256 *~;
#X floatatom 202 77 8 0 0 2 index1 - - 0;
#X obj 202 216 pack f 20;
#X obj 202 239 line~;
#X obj 43 13 r carrier;
#X obj 122 209 +~;
#X floatatom 292 77 8 0 0 2 mod2 - - 0;
#X obj 292 169 osc~;
#X obj 292 192 *~;
#X obj 372 152 pack f 20;
#X obj 372 175 line~;
#X obj 122 13 r mod1;
#X obj 202 13 r index1;
#X obj 292 13 r mod2;
#X obj 372 13 r index2;
#X obj 43 319 outlet~;
#X obj 43 190 pack f 20;
#X obj 122 117 pack f 20;
#X obj 292 109 pack f 20;
#X obj 122 151 line~;
#X obj 43 220 line~;
#X obj 292 139 line~;
#X floatatom 372 77 8 0 0 2 index2 - - 0;
#X connect 0 0 21 0;
#X connect 1 0 2 0;
#X connect 2 0 20 0;
#X connect 3 0 22 0;
#X connect 4 0 5 0;
#X connect 5 0 1 1;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 5 1;
#X connect 9 0 0 0;
#X connect 10 0 4 0;
#X connect 11 0 23 0;
#X connect 12 0 13 0;
#X connect 13 0 10 1;
#X connect 14 0 15 0;
#X connect 15 0 13 1;
#X connect 16 0 3 0;
#X connect 17 0 6 0;
#X connect 18 0 11 0;
#X connect 19 0 27 0;
#X connect 21 0 25 0;
#X connect 22 0 24 0;
#X connect 23 0 26 0;
#X connect 24 0 10 0;
#X connect 25 0 1 0;
#X connect 26 0 12 0;
#X connect 27 0 14 0;
#X coords 0 -1 1 1 400 60 1 30 40;
#X restore 467 788 pd synth;
#X obj 467 255 bng 15 250 50 0 empty empty create_dataset 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 466 660 s acc_input_example;
#X text 466 378 11) train the network. the argument is percentage of data to be used for validating. in this case we'll use 10% of the data to validate the model;
#X text 506 849 14) turn the DSP on and turn up the volume in the slider to hear the results;
#X obj 892 82 r accel_vals;
#X msg 892 178 predict \$1 \$2 \$3;
#X text 890 375 17) you can also morph between saved models (mind \, if you haven't saved your model and call "morph" with another model \, the current one will be lost);
#X text 890 569 18) when done \, destroy the network if you want to (it will be destroyed when this patch is closed);
#X msg 40 576 set_decay 0.0001;
#X msg 40 507 set_learning_rate 0.03;
#X msg 522 634 keep_training;
#X text 463 479 12) in case you have set a desired accuracy \, and the accuracy of [neuralnet] has not reached it \, the training dataset will not be erased from its memory. If you want to change some parameters and retrain the network \, first change any parameters you want \, and then send "retrain" to train from scratch \, or "keep_training" to start over without resetting the weights and biases. Otherwise \, if you still want to move on with validating and making predictions \, send the "release_mem" message first. If you haven't set a desired accuracy \, don't send any of these messages \, as Pd will most likely crash;
#X text 464 688 13) validate the network with 10% of the training data set. check the number of atoms connected to the outlets of [neuralnet] to see if they change;
#X text 891 241 16) if you want to save your model write the filename and the full path;
#X msg 40 646 set_epochs 2000;
#X text 32 26 This example adapted from the collection of [neuralnet] examples from Alexandros Drymonitisis, f 37;
#X obj 892 811 neuralnet;
#X obj 892 787 r reg_example;
#X obj 40 237 s reg_example;
#X obj 40 155 s reg_example;
#X msg 40 215 regression;
#X text 38 108 1) set the network size;
#X text 38 190 2) set the network mode;
#X obj 40 321 s reg_example;
#X obj 40 389 s reg_example;
#X obj 40 458 s reg_example;
#X obj 40 530 s reg_example;
#X obj 40 599 s reg_example;
#X text 37 692 9) set a desired minimum accuracy if you want to be able to retraing the model without repeating the process in step 10;
#X text 39 621 8) set number of epochs;
#X text 39 555 7) set the decay of the learning rate;
#X text 37 483 6) set the learning rate;
#X text 37 413 5) set the optimizer;
#X text 40 344 4) set the loss function;
#X text 39 263 3) set the activation functions;
#X text 38 805 10) start polling accelerometer;
#N canvas 208 233 675 367 set_params_manually 0;
#X obj 37 73 s carrier;
#X obj 118 106 s mod1;
#X obj 204 108 s index1;
#X obj 292 102 s mod2;
#X obj 372 111 s index2;
#X floatatom 44 27 8 0 0 2 carrier - - 0;
#X floatatom 123 27 8 0 0 2 mod1 - - 0;
#X floatatom 203 27 8 0 0 2 index1 - - 0;
#X floatatom 293 27 8 0 0 2 mod2 - - 0;
#X floatatom 373 27 8 0 0 2 index2 - - 0;
#X obj 120 59 t b f;
#X obj 204 63 t b f;
#X obj 375 63 t b f;
#X obj 293 59 t b f;
#X connect 5 0 0 0;
#X connect 6 0 10 0;
#X connect 7 0 11 0;
#X connect 8 0 13 0;
#X connect 9 0 12 0;
#X connect 10 0 5 0;
#X connect 10 1 1 0;
#X connect 11 0 5 0;
#X connect 11 1 2 0;
#X connect 12 0 5 0;
#X connect 12 1 4 0;
#X connect 13 0 5 0;
#X connect 13 1 3 0;
#X restore 463 181 pd set_params_manually;
#X text 461 106 10) set the FM synthesis parameters either manually or random \, then click on "store" to create a pair input-output. When done \, clock on create dataset (the dataset will be augmented by a factor 10 - each example will be replicated 10 times adding a bit of noise to the accelerometer data).;
#X obj 40 670 s reg_example;
#X obj 39 772 s reg_example;
#X obj 466 759 s reg_example;
#X obj 466 451 s reg_example;
#X obj 467 343 s reg_example;
#X obj 892 201 s reg_example;
#X obj 892 349 s reg_example;
#X obj 892 527 s reg_example;
#X obj 892 631 s reg_example;
#X obj 892 751 s reg_example;
#X obj 40 1108 pack f f f;
#X obj 39 1011 t f f;
#X obj 132 1011 t f f;
#X obj 225 1011 t f f;
#X obj 40 1131 s accel_vals;
#X obj 39 859 route poll nopoll;
#X msg 88 882 0;
#X msg 39 909 listen \$1;
#X msg 39 882 8001;
#X obj 39 969 unpack f f f;
#X msg 65 1061 0.1;
#X msg 158 1061 0.2;
#X msg 250 1060 0.4;
#X text 293 1061 alternatively stop polling and set values manually, f 14;
#X msg 40 133 create 3 64 64 5;
#X obj 39 935 netreceive -u;
#X msg 892 292 save /Users/stefanof/Desktop/MCT4054_W8-4/my_reg_model.ann;
#X msg 952 314 load /Users/stefanof/Desktop/MCT4054_W8-4/my_reg_model.ann;
#X text 923 104 15) open the [spigot] below to start predicting with new data;
#X text 564 927 FM Synthesizer with 5 control parameters;
#X connect 3 0 102 0;
#X connect 4 0 102 0;
#X connect 5 0 95 0;
#X connect 6 0 7 0;
#X connect 6 0 7 1;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 6 1;
#X connect 13 0 91 0;
#X connect 14 0 90 0;
#X connect 15 0 72 0;
#X connect 16 0 73 0;
#X connect 17 0 74 0;
#X connect 18 0 54 0;
#X connect 19 0 18 1;
#X connect 20 0 22 0;
#X connect 21 0 94 0;
#X connect 22 0 21 0;
#X connect 23 0 22 1;
#X connect 24 0 96 0;
#X connect 25 0 89 0;
#X connect 26 0 27 0;
#X connect 27 0 88 0;
#X connect 28 0 50 0;
#X connect 29 0 35 1;
#X connect 30 0 35 1;
#X connect 31 0 35 1;
#X connect 32 0 35 1;
#X connect 33 0 35 1;
#X connect 34 0 13 0;
#X connect 35 0 34 0;
#X connect 38 0 50 0;
#X connect 43 0 42 0;
#X connect 43 1 44 0;
#X connect 43 2 45 0;
#X connect 43 3 46 0;
#X connect 43 4 47 0;
#X connect 48 0 6 0;
#X connect 49 0 35 0;
#X connect 53 0 18 0;
#X connect 54 0 92 0;
#X connect 57 0 76 0;
#X connect 58 0 75 0;
#X connect 59 0 50 0;
#X connect 63 0 87 0;
#X connect 65 0 43 0;
#X connect 65 2 2 0;
#X connect 65 4 1 0;
#X connect 65 5 0 0;
#X connect 66 0 65 0;
#X connect 69 0 67 0;
#X connect 97 0 101 0;
#X connect 98 0 97 0;
#X connect 98 1 11 0;
#X connect 99 0 97 1;
#X connect 99 1 12 0;
#X connect 100 0 97 2;
#X connect 100 1 41 0;
#X connect 102 0 105 0;
#X connect 102 1 103 0;
#X connect 103 0 104 0;
#X connect 104 0 112 0;
#X connect 105 0 104 0;
#X connect 106 0 98 0;
#X connect 106 1 99 0;
#X connect 106 2 100 0;
#X connect 107 0 97 0;
#X connect 108 0 97 1;
#X connect 109 0 97 2;
#X connect 111 0 68 0;
#X connect 112 0 106 0;
#X connect 113 0 93 0;
#X connect 114 0 93 0;
